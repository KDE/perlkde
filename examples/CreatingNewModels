#!/usr/local/bin/perl -w
use strict;

BEGIN {
        chdir "$ENV{HOME}/src/qt/4/PerlQt";
        unshift @INC, 'blib/arch';
        unshift @INC, 'blib/lib';
}

package myStringListModel;
use Qt;
use Qt::isa qw(Qt::QAbstractListModel);
use Devel::Peek;

my @stringList;

sub NEW {
    my $class = shift;
    my( $stringListRef, $parent ) = @_;
    $class->SUPER::NEW();
    @stringList = @{$stringListRef};
}

sub rowCount {
    my( $parent ) = @_;
    return scalar @stringList;
}

sub data {
    my( $index, $role ) = @_;

    if (!$index->isValid()){
        return Qt::QVariant();
    }

    my $modelRow = $index->row();
    if ($modelRow >= scalar @stringList){
        return Qt::QVariant();
    }

    if ($role == 0 ) { #Qt::DisplayRole
        return Qt::QVariant($stringList[$modelRow]);
    }
    else {
        return Qt::QVariant();
    }
}

sub headerData {
    my ( $section, $orientation, $role ) = @_;
    if ( $role != 0 ) { #Qt::DisplayRole
        return Qt::QVariant();
    }

    if ( $orientation == 1 ) { #Qt::Horizontal
        return Qt::QVariant("Column " . $section);
    }
    else {
        return Qt::QVariant("Row " . $section);
    }
}

sub flags {
    my ( $index ) = @_;

    if (!$index->isValid()) {
        return 32; #Qt::ItemIsEnabled
    }

    return Qt::QAbstractItemModel::flags($index) | 2; #Qt::ItemIsEditable
    #return 32;
}

1;

package main;

use Qt;
use myStringListModel;

my $model = myStringListModel( [qw( Hello world you are awesome )] );
my $numRows = $model->rowCount();

my $splitter = Qt::QSplitter();

my $tableview = Qt::QTableView($splitter);
$tableview->setModel( $model );

my $listview = Qt::QListView($splitter);
$listview->setModel( $model );

$tableview->setSelectionModel( $listview->selectionModel() );
$splitter->show();
exit Qt::appexec;
